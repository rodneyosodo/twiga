// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import (
	context "context"

	users "github.com/rodneyosodo/twiga/users"
	mock "github.com/stretchr/testify/mock"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// CreateFeed provides a mock function with given fields: ctx, token, feed
func (_m *Service) CreateFeed(ctx context.Context, token string, feed users.Feed) error {
	ret := _m.Called(ctx, token, feed)

	if len(ret) == 0 {
		panic("no return value specified for CreateFeed")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Feed) error); ok {
		r0 = rf(ctx, token, feed)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateFollower provides a mock function with given fields: ctx, token, following
func (_m *Service) CreateFollower(ctx context.Context, token string, following users.Following) (users.Following, error) {
	ret := _m.Called(ctx, token, following)

	if len(ret) == 0 {
		panic("no return value specified for CreateFollower")
	}

	var r0 users.Following
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Following) (users.Following, error)); ok {
		return rf(ctx, token, following)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Following) users.Following); ok {
		r0 = rf(ctx, token, following)
	} else {
		r0 = ret.Get(0).(users.Following)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.Following) error); ok {
		r1 = rf(ctx, token, following)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreatePreferences provides a mock function with given fields: ctx, token, preference
func (_m *Service) CreatePreferences(ctx context.Context, token string, preference users.Preference) (users.Preference, error) {
	ret := _m.Called(ctx, token, preference)

	if len(ret) == 0 {
		panic("no return value specified for CreatePreferences")
	}

	var r0 users.Preference
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Preference) (users.Preference, error)); ok {
		return rf(ctx, token, preference)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Preference) users.Preference); ok {
		r0 = rf(ctx, token, preference)
	} else {
		r0 = ret.Get(0).(users.Preference)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.Preference) error); ok {
		r1 = rf(ctx, token, preference)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateUser provides a mock function with given fields: ctx, user
func (_m *Service) CreateUser(ctx context.Context, user users.User) (users.User, error) {
	ret := _m.Called(ctx, user)

	if len(ret) == 0 {
		panic("no return value specified for CreateUser")
	}

	var r0 users.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, users.User) (users.User, error)); ok {
		return rf(ctx, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, users.User) users.User); ok {
		r0 = rf(ctx, user)
	} else {
		r0 = ret.Get(0).(users.User)
	}

	if rf, ok := ret.Get(1).(func(context.Context, users.User) error); ok {
		r1 = rf(ctx, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteFollower provides a mock function with given fields: ctx, token, following
func (_m *Service) DeleteFollower(ctx context.Context, token string, following users.Following) error {
	ret := _m.Called(ctx, token, following)

	if len(ret) == 0 {
		panic("no return value specified for DeleteFollower")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Following) error); ok {
		r0 = rf(ctx, token, following)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeletePreferences provides a mock function with given fields: ctx, token
func (_m *Service) DeletePreferences(ctx context.Context, token string) error {
	ret := _m.Called(ctx, token)

	if len(ret) == 0 {
		panic("no return value specified for DeletePreferences")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, token)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteUser provides a mock function with given fields: ctx, token, id
func (_m *Service) DeleteUser(ctx context.Context, token string, id string) error {
	ret := _m.Called(ctx, token, id)

	if len(ret) == 0 {
		panic("no return value specified for DeleteUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, token, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetPreferences provides a mock function with given fields: ctx, token, page
func (_m *Service) GetPreferences(ctx context.Context, token string, page users.Page) (users.PreferencesPage, error) {
	ret := _m.Called(ctx, token, page)

	if len(ret) == 0 {
		panic("no return value specified for GetPreferences")
	}

	var r0 users.PreferencesPage
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Page) (users.PreferencesPage, error)); ok {
		return rf(ctx, token, page)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Page) users.PreferencesPage); ok {
		r0 = rf(ctx, token, page)
	} else {
		r0 = ret.Get(0).(users.PreferencesPage)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.Page) error); ok {
		r1 = rf(ctx, token, page)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPreferencesByUserID provides a mock function with given fields: ctx, token
func (_m *Service) GetPreferencesByUserID(ctx context.Context, token string) (users.Preference, error) {
	ret := _m.Called(ctx, token)

	if len(ret) == 0 {
		panic("no return value specified for GetPreferencesByUserID")
	}

	var r0 users.Preference
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (users.Preference, error)); ok {
		return rf(ctx, token)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) users.Preference); ok {
		r0 = rf(ctx, token)
	} else {
		r0 = ret.Get(0).(users.Preference)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUserByID provides a mock function with given fields: ctx, token, id
func (_m *Service) GetUserByID(ctx context.Context, token string, id string) (users.User, error) {
	ret := _m.Called(ctx, token, id)

	if len(ret) == 0 {
		panic("no return value specified for GetUserByID")
	}

	var r0 users.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) (users.User, error)); ok {
		return rf(ctx, token, id)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string) users.User); ok {
		r0 = rf(ctx, token, id)
	} else {
		r0 = ret.Get(0).(users.User)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, token, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUserFeed provides a mock function with given fields: ctx, token, page
func (_m *Service) GetUserFeed(ctx context.Context, token string, page users.Page) (users.FeedPage, error) {
	ret := _m.Called(ctx, token, page)

	if len(ret) == 0 {
		panic("no return value specified for GetUserFeed")
	}

	var r0 users.FeedPage
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Page) (users.FeedPage, error)); ok {
		return rf(ctx, token, page)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Page) users.FeedPage); ok {
		r0 = rf(ctx, token, page)
	} else {
		r0 = ret.Get(0).(users.FeedPage)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.Page) error); ok {
		r1 = rf(ctx, token, page)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUserFollowings provides a mock function with given fields: ctx, token, page
func (_m *Service) GetUserFollowings(ctx context.Context, token string, page users.Page) (users.FollowingsPage, error) {
	ret := _m.Called(ctx, token, page)

	if len(ret) == 0 {
		panic("no return value specified for GetUserFollowings")
	}

	var r0 users.FollowingsPage
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Page) (users.FollowingsPage, error)); ok {
		return rf(ctx, token, page)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Page) users.FollowingsPage); ok {
		r0 = rf(ctx, token, page)
	} else {
		r0 = ret.Get(0).(users.FollowingsPage)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.Page) error); ok {
		r1 = rf(ctx, token, page)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUsers provides a mock function with given fields: ctx, token, page
func (_m *Service) GetUsers(ctx context.Context, token string, page users.Page) (users.UsersPage, error) {
	ret := _m.Called(ctx, token, page)

	if len(ret) == 0 {
		panic("no return value specified for GetUsers")
	}

	var r0 users.UsersPage
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Page) (users.UsersPage, error)); ok {
		return rf(ctx, token, page)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Page) users.UsersPage); ok {
		r0 = rf(ctx, token, page)
	} else {
		r0 = ret.Get(0).(users.UsersPage)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.Page) error); ok {
		r1 = rf(ctx, token, page)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IdentifyUser provides a mock function with given fields: ctx, token
func (_m *Service) IdentifyUser(ctx context.Context, token string) (string, error) {
	ret := _m.Called(ctx, token)

	if len(ret) == 0 {
		panic("no return value specified for IdentifyUser")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (string, error)); ok {
		return rf(ctx, token)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, token)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IssueToken provides a mock function with given fields: ctx, user
func (_m *Service) IssueToken(ctx context.Context, user users.User) (string, error) {
	ret := _m.Called(ctx, user)

	if len(ret) == 0 {
		panic("no return value specified for IssueToken")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, users.User) (string, error)); ok {
		return rf(ctx, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, users.User) string); ok {
		r0 = rf(ctx, user)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, users.User) error); ok {
		r1 = rf(ctx, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RefreshToken provides a mock function with given fields: ctx, token
func (_m *Service) RefreshToken(ctx context.Context, token string) (string, error) {
	ret := _m.Called(ctx, token)

	if len(ret) == 0 {
		panic("no return value specified for RefreshToken")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (string, error)); ok {
		return rf(ctx, token)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, token)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateEmailPreferences provides a mock function with given fields: ctx, token, preference
func (_m *Service) UpdateEmailPreferences(ctx context.Context, token string, preference users.Preference) (users.Preference, error) {
	ret := _m.Called(ctx, token, preference)

	if len(ret) == 0 {
		panic("no return value specified for UpdateEmailPreferences")
	}

	var r0 users.Preference
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Preference) (users.Preference, error)); ok {
		return rf(ctx, token, preference)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Preference) users.Preference); ok {
		r0 = rf(ctx, token, preference)
	} else {
		r0 = ret.Get(0).(users.Preference)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.Preference) error); ok {
		r1 = rf(ctx, token, preference)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePreferences provides a mock function with given fields: ctx, token, preference
func (_m *Service) UpdatePreferences(ctx context.Context, token string, preference users.Preference) (users.Preference, error) {
	ret := _m.Called(ctx, token, preference)

	if len(ret) == 0 {
		panic("no return value specified for UpdatePreferences")
	}

	var r0 users.Preference
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Preference) (users.Preference, error)); ok {
		return rf(ctx, token, preference)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Preference) users.Preference); ok {
		r0 = rf(ctx, token, preference)
	} else {
		r0 = ret.Get(0).(users.Preference)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.Preference) error); ok {
		r1 = rf(ctx, token, preference)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePushPreferences provides a mock function with given fields: ctx, token, preference
func (_m *Service) UpdatePushPreferences(ctx context.Context, token string, preference users.Preference) (users.Preference, error) {
	ret := _m.Called(ctx, token, preference)

	if len(ret) == 0 {
		panic("no return value specified for UpdatePushPreferences")
	}

	var r0 users.Preference
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Preference) (users.Preference, error)); ok {
		return rf(ctx, token, preference)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.Preference) users.Preference); ok {
		r0 = rf(ctx, token, preference)
	} else {
		r0 = ret.Get(0).(users.Preference)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.Preference) error); ok {
		r1 = rf(ctx, token, preference)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateUser provides a mock function with given fields: ctx, token, user
func (_m *Service) UpdateUser(ctx context.Context, token string, user users.User) (users.User, error) {
	ret := _m.Called(ctx, token, user)

	if len(ret) == 0 {
		panic("no return value specified for UpdateUser")
	}

	var r0 users.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.User) (users.User, error)); ok {
		return rf(ctx, token, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.User) users.User); ok {
		r0 = rf(ctx, token, user)
	} else {
		r0 = ret.Get(0).(users.User)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.User) error); ok {
		r1 = rf(ctx, token, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateUserBio provides a mock function with given fields: ctx, token, user
func (_m *Service) UpdateUserBio(ctx context.Context, token string, user users.User) (users.User, error) {
	ret := _m.Called(ctx, token, user)

	if len(ret) == 0 {
		panic("no return value specified for UpdateUserBio")
	}

	var r0 users.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.User) (users.User, error)); ok {
		return rf(ctx, token, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.User) users.User); ok {
		r0 = rf(ctx, token, user)
	} else {
		r0 = ret.Get(0).(users.User)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.User) error); ok {
		r1 = rf(ctx, token, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateUserEmail provides a mock function with given fields: ctx, token, user
func (_m *Service) UpdateUserEmail(ctx context.Context, token string, user users.User) (users.User, error) {
	ret := _m.Called(ctx, token, user)

	if len(ret) == 0 {
		panic("no return value specified for UpdateUserEmail")
	}

	var r0 users.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.User) (users.User, error)); ok {
		return rf(ctx, token, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.User) users.User); ok {
		r0 = rf(ctx, token, user)
	} else {
		r0 = ret.Get(0).(users.User)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.User) error); ok {
		r1 = rf(ctx, token, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateUserPassword provides a mock function with given fields: ctx, token, id, oldPassword, currentPassowrd
func (_m *Service) UpdateUserPassword(ctx context.Context, token string, id string, oldPassword string, currentPassowrd string) (users.User, error) {
	ret := _m.Called(ctx, token, id, oldPassword, currentPassowrd)

	if len(ret) == 0 {
		panic("no return value specified for UpdateUserPassword")
	}

	var r0 users.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, string) (users.User, error)); ok {
		return rf(ctx, token, id, oldPassword, currentPassowrd)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, string) users.User); ok {
		r0 = rf(ctx, token, id, oldPassword, currentPassowrd)
	} else {
		r0 = ret.Get(0).(users.User)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string, string, string) error); ok {
		r1 = rf(ctx, token, id, oldPassword, currentPassowrd)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateUserPictureURL provides a mock function with given fields: ctx, token, user
func (_m *Service) UpdateUserPictureURL(ctx context.Context, token string, user users.User) (users.User, error) {
	ret := _m.Called(ctx, token, user)

	if len(ret) == 0 {
		panic("no return value specified for UpdateUserPictureURL")
	}

	var r0 users.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.User) (users.User, error)); ok {
		return rf(ctx, token, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.User) users.User); ok {
		r0 = rf(ctx, token, user)
	} else {
		r0 = ret.Get(0).(users.User)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.User) error); ok {
		r1 = rf(ctx, token, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateUserPreferences provides a mock function with given fields: ctx, token, user
func (_m *Service) UpdateUserPreferences(ctx context.Context, token string, user users.User) (users.User, error) {
	ret := _m.Called(ctx, token, user)

	if len(ret) == 0 {
		panic("no return value specified for UpdateUserPreferences")
	}

	var r0 users.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.User) (users.User, error)); ok {
		return rf(ctx, token, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.User) users.User); ok {
		r0 = rf(ctx, token, user)
	} else {
		r0 = ret.Get(0).(users.User)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.User) error); ok {
		r1 = rf(ctx, token, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateUserUsername provides a mock function with given fields: ctx, token, user
func (_m *Service) UpdateUserUsername(ctx context.Context, token string, user users.User) (users.User, error) {
	ret := _m.Called(ctx, token, user)

	if len(ret) == 0 {
		panic("no return value specified for UpdateUserUsername")
	}

	var r0 users.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, users.User) (users.User, error)); ok {
		return rf(ctx, token, user)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, users.User) users.User); ok {
		r0 = rf(ctx, token, user)
	} else {
		r0 = ret.Get(0).(users.User)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, users.User) error); ok {
		r1 = rf(ctx, token, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewService creates a new instance of Service. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewService(t interface {
	mock.TestingT
	Cleanup(func())
}) *Service {
	mock := &Service{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
